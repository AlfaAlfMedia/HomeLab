# Upstream: Definiert den internen Backend-Server (z. B. Authentik)
upstream authentik {
    # Ersetze "example.internal" und den Port ggf. durch deine internen Angaben
    server example.internal:port;
    # Verbindungs-Pooling: Mehrfache Verbindungen bleiben offen
    keepalive 10;
}

# Map zur Behandlung von WebSocket-Upgrades
map $http_upgrade $connection_upgrade_keepalive {
    default upgrade;
    ''      '';
}

# HTTP-Server: Leitet alle Anfragen auf HTTPS um
server {
    listen 80;
    listen [::]:80;
    # Ersetze "sub.example.com" mit deiner öffentlichen Domain
    server_name sub.example.com;
    
    # 301 Redirect zu HTTPS
    return 301 https://$host$request_uri;
}

# HTTPS-Server: Optimierte TLS-Konfiguration und Reverse Proxy
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    # Ersetze "sub.example.com" mit deiner öffentlichen Domain
    server_name sub.example.com;

    # TLS-Zertifikate
    # Ersetze "example.com" mit deiner Domain
    ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;

    # TLS-Härtung
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305';
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # HSTS – Erzwingt HTTPS, auch für Subdomains
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    # Proxy-Passage an den Authentik-Server
    location / {
        proxy_pass https://authentik;
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade_keepalive;
    }
}
